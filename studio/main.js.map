{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"Studio\"","webpack:///./studio/main_dev.js","webpack:///./studio/HtmlToXlsxProperties.js","webpack:///external \"Studio.libraries['react']\""],"names":["Studio","addPropertiesComponent","Properties","entity","__entitySet","recipe","addApiSpec","template","htmlToXlsx","htmlEngine","previewListeners","push","request","entities","extensions","options","preview","enabled","showWarning","getSettingValueByKey","setSetting","openModal","EntityRefSelect","Object","keys","filter","k","map","baseXlsxTemplate","shortid","templateAssetShortid","foundItems","selectXlsxTemplates","e","foundAssets","selectAssets","length","name","props","applyDefaultsToEntity","bind","changeHtmlToXlsx","removeInvalidHtmlEngine","removeInvalidXlsxTemplateReferences","nextProps","_id","onChange","updatedXlsxTemplates","updatedXlsxAssets","newXlsxTemplate","changed","htmlEngines","isValidHtmlEngine","includes","entityNeedsDefault","__isNew","change","oldXlsxTemplate","prop","value","newValue","v","target","engine","insertToXlsxTemplate","checked","references","data","assets","selected","changeBaseXlsxTemplate","xlsxTemplates","waitForJS","Component"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = Studio;","import Properties from './HtmlToXlsxProperties'\nimport Studio from 'jsreport-studio'\n\nStudio.addPropertiesComponent('html to xlsx', Properties, (entity) => entity.__entitySet === 'templates' && entity.recipe === 'html-to-xlsx')\n\nStudio.addApiSpec({\n  template: {\n    htmlToXlsx: {\n      htmlEngine: '...'\n    }\n  }\n})\n\nStudio.previewListeners.push((request, entities) => {\n  if (request.template.recipe !== 'html-to-xlsx') {\n    return\n  }\n\n  if (Studio.extensions['html-to-xlsx'].options.preview.enabled === false) {\n    return\n  }\n\n  if (Studio.extensions['html-to-xlsx'].options.preview.showWarning === false) {\n    return\n  }\n\n  if (Studio.getSettingValueByKey('office-preview-informed', false) === true) {\n    return\n  }\n\n  Studio.setSetting('office-preview-informed', true)\n\n  Studio.openModal(() => <div>\n    We need to upload your office report to our publicly hosted server to be able to use\n    Office Online Service for previewing here in the studio. You can disable it in the configuration, see <a\n      href='https://jsreport.net/learn/html-to-xlsx' target='_blank'>https://jsreport.net/learn/html-to-xlsx</a> for details.\n  </div>)\n})\n","import React, { Component } from 'react'\nimport Studio from 'jsreport-studio'\n\nconst EntityRefSelect = Studio.EntityRefSelect\n\nclass Properties extends Component {\n  static selectXlsxTemplates (entities) {\n    return Object.keys(entities).filter((k) => entities[k].__entitySet === 'xlsxTemplates').map((k) => entities[k])\n  }\n\n  static selectAssets (entities) {\n    return Object.keys(entities).filter((k) => entities[k].__entitySet === 'assets').map((k) => entities[k])\n  }\n\n  static title (entity, entities) {\n    if (\n      !entity.baseXlsxTemplate ||\n      (!entity.baseXlsxTemplate.shortid && !entity.baseXlsxTemplate.templateAssetShortid)\n    ) {\n      return 'xlsx template'\n    }\n\n    const foundItems = Properties.selectXlsxTemplates(entities).filter((e) => entity.baseXlsxTemplate.shortid === e.shortid)\n    const foundAssets = Properties.selectAssets(entities).filter((e) => entity.baseXlsxTemplate.templateAssetShortid === e.shortid)\n\n    if (!foundItems.length && !foundAssets.length) {\n      return 'xlsx template'\n    }\n\n    let name\n\n    if (foundAssets.length) {\n      name = foundAssets[0].name\n    } else {\n      name = foundItems[0].name\n    }\n\n    return 'xlsx template: ' + name\n  }\n\n  constructor (props) {\n    super(props)\n\n    this.applyDefaultsToEntity = this.applyDefaultsToEntity.bind(this)\n    this.changeHtmlToXlsx = this.changeHtmlToXlsx.bind(this)\n  }\n\n  componentDidMount () {\n    this.applyDefaultsToEntity(this.props)\n    this.removeInvalidHtmlEngine()\n    this.removeInvalidXlsxTemplateReferences()\n  }\n\n  componentWillReceiveProps (nextProps) {\n    // when component changes because another template is created\n    if (this.props.entity._id !== nextProps.entity._id) {\n      this.applyDefaultsToEntity(nextProps)\n    }\n  }\n\n  componentDidUpdate () {\n    this.removeInvalidHtmlEngine()\n    this.removeInvalidXlsxTemplateReferences()\n  }\n\n  removeInvalidXlsxTemplateReferences () {\n    const { entity, entities, onChange } = this.props\n\n    if (!entity.baseXlsxTemplate) {\n      return\n    }\n\n    const updatedXlsxTemplates = Object.keys(entities).filter((k) => entities[k].__entitySet === 'xlsxTemplates' && entities[k].shortid === entity.baseXlsxTemplate.shortid)\n    const updatedXlsxAssets = Object.keys(entities).filter((k) => entities[k].__entitySet === 'assets' && entities[k].shortid === entity.baseXlsxTemplate.templateAssetShortid)\n\n    const newXlsxTemplate = { ...entity.baseXlsxTemplate }\n    let changed = false\n\n    if (entity.baseXlsxTemplate.shortid && updatedXlsxTemplates.length === 0) {\n      changed = true\n      delete newXlsxTemplate.shortid\n    }\n\n    if (entity.baseXlsxTemplate.templateAssetShortid && updatedXlsxAssets.length === 0) {\n      changed = true\n      delete newXlsxTemplate.templateAssetShortid\n    }\n\n    if (changed) {\n      onChange({ _id: entity._id, baseXlsxTemplate: Object.keys(newXlsxTemplate).length ? newXlsxTemplate : null })\n    }\n  }\n\n  removeInvalidHtmlEngine () {\n    const { entity } = this.props\n\n    if (!entity.htmlToXlsx || !entity.htmlToXlsx.htmlEngine) {\n      return\n    }\n\n    const htmlEngines = Studio.extensions['html-to-xlsx'].options.htmlEngines\n    const isValidHtmlEngine = htmlEngines.includes(entity.htmlToXlsx.htmlEngine)\n\n    if (!isValidHtmlEngine) {\n      this.changeHtmlToXlsx(this.props, { htmlEngine: htmlEngines[0] })\n    }\n  }\n\n  applyDefaultsToEntity (props) {\n    const { entity } = props\n    const htmlEngines = Studio.extensions['html-to-xlsx'].options.htmlEngines\n    let entityNeedsDefault = false\n\n    if (\n      entity.__isNew ||\n      (entity.htmlToXlsx == null || entity.htmlToXlsx.htmlEngine == null)\n    ) {\n      entityNeedsDefault = true\n    }\n\n    if (htmlEngines != null && htmlEngines[0] != null && entityNeedsDefault) {\n      this.changeHtmlToXlsx(props, {\n        htmlEngine: htmlEngines[0]\n      })\n    }\n  }\n\n  changeHtmlToXlsx (props, change) {\n    const { entity, onChange } = props\n    const htmlToXlsx = entity.htmlToXlsx || {}\n\n    onChange({\n      ...entity,\n      htmlToXlsx: { ...htmlToXlsx, ...change }\n    })\n  }\n\n  changeBaseXlsxTemplate (oldXlsxTemplate, prop, value) {\n    let newValue\n\n    debugger\n\n    if (value == null) {\n      newValue = { ...oldXlsxTemplate }\n      newValue[prop] = null\n    } else {\n      return { ...oldXlsxTemplate, [prop]: value }\n    }\n\n    newValue = Object.keys(newValue).length ? newValue : null\n\n    return newValue\n  }\n\n  render () {\n    const { entity, onChange } = this.props\n    const htmlToXlsx = entity.htmlToXlsx || {}\n    const htmlEngines = Studio.extensions['html-to-xlsx'].options.htmlEngines\n\n    return (\n      <div className='properties-section'>\n        <div className='form-group'>\n          <label>html engine</label>\n          <select\n            value={htmlToXlsx.htmlEngine}\n            onChange={(v) => this.changeHtmlToXlsx(this.props, { htmlEngine: v.target.value })}\n          >\n            {htmlEngines.map((engine) => (\n              <option key={engine} value={engine}>{engine}</option>\n            ))}\n          </select>\n        </div>\n        <div className='form-group'>\n          <label>insert table output to xlsx template</label>\n          <input\n            type='checkbox' checked={htmlToXlsx.insertToXlsxTemplate === true}\n            onChange={(v) => this.changeHtmlToXlsx(this.props, { insertToXlsxTemplate: v.target.checked })} />\n        </div>\n        {htmlToXlsx.insertToXlsxTemplate === true && (\n          <div className='form-group'>\n            <label>xlsx asset</label>\n            <EntityRefSelect\n              headingLabel='Select xlsx template'\n              filter={(references) => ({ data: references.assets })}\n              value={entity.baseXlsxTemplate ? entity.baseXlsxTemplate.templateAssetShortid : null}\n              onChange={(selected) => onChange({\n                _id: entity._id,\n                baseXlsxTemplate: this.changeBaseXlsxTemplate(this.props.entity.baseXlsxTemplate, 'templateAssetShortid', selected != null && selected.length > 0 ? selected[0].shortid : null)\n              })}\n            />\n          </div>\n        )}\n        {htmlToXlsx.insertToXlsxTemplate === true && (\n          <div className='form-group'>\n            <label>xlsx template (deprecated)</label>\n            <EntityRefSelect\n              headingLabel='Select xlsx template'\n              filter={(references) => ({ xlsxTemplates: references.xlsxTemplates })}\n              value={entity.baseXlsxTemplate ? entity.baseXlsxTemplate.shortid : null}\n              onChange={(selected) => onChange({\n                _id: entity._id,\n                baseXlsxTemplate: this.changeBaseXlsxTemplate(this.props.entity.baseXlsxTemplate, 'shortid', selected != null && selected.length > 0 ? selected[0].shortid : null)\n              })}\n            />\n          </div>\n        )}\n        {htmlToXlsx.htmlEngine !== 'cheerio' && (\n          <div className='form-group'>\n            <label title='window.JSREPORT_READY_TO_START=true;'>wait for conversion trigger</label>\n            <input\n              type='checkbox' title='window.JSREPORT_READY_TO_START=true;' checked={htmlToXlsx.waitForJS === true}\n              onChange={(v) => this.changeHtmlToXlsx(this.props, { waitForJS: v.target.checked })} />\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Properties\n","module.exports = Studio.libraries['react'];"],"sourceRoot":""}