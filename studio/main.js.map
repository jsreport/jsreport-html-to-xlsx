{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"Studio\"","webpack:///./studio/main_dev.js","webpack:///./studio/HtmlToXlsxProperties.js","webpack:///external \"Studio.libraries['react']\""],"names":["Studio","addPropertiesComponent","Properties","entity","__entitySet","recipe","addApiSpec","template","htmlToXlsx","htmlEngine","EntityRefSelect","entities","Object","keys","filter","k","map","baseXlsxTemplate","shortid","foundItems","selectXlsxTemplates","e","length","name","props","applyDefaultsToEntity","bind","changeHtmlToXlsx","removeInvalidXlsxTemplateReferences","nextProps","_id","onChange","updatedXlsxTemplates","htmlEngines","extensions","options","entityNeedsDefault","__isNew","change","v","target","value","engine","insertToXlsxTemplate","checked","references","xlsxTemplates","selected","waitForJS","Component"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = Studio;","import Properties from './HtmlToXlsxProperties'\nimport Studio from 'jsreport-studio'\n\nStudio.addPropertiesComponent('html to xlsx', Properties, (entity) => entity.__entitySet === 'templates' && entity.recipe === 'html-to-xlsx')\n\nStudio.addApiSpec({\n  template: {\n    htmlToXlsx: {\n      htmlEngine: '...'\n    }\n  }\n})\n","import React, { Component } from 'react'\nimport Studio from 'jsreport-studio'\n\nconst EntityRefSelect = Studio.EntityRefSelect\n\nclass Properties extends Component {\n  static selectXlsxTemplates (entities) {\n    return Object.keys(entities).filter((k) => entities[k].__entitySet === 'xlsxTemplates').map((k) => entities[k])\n  }\n\n  static title (entity, entities) {\n    if (!entity.baseXlsxTemplate || !entity.baseXlsxTemplate.shortid) {\n      return 'xlsx template'\n    }\n\n    const foundItems = Properties.selectXlsxTemplates(entities).filter((e) => entity.baseXlsxTemplate.shortid === e.shortid)\n\n    if (!foundItems.length) {\n      return 'xlsx template'\n    }\n\n    return 'xlsx template: ' + foundItems[0].name\n  }\n\n  constructor (props) {\n    super(props)\n\n    this.applyDefaultsToEntity = this.applyDefaultsToEntity.bind(this)\n    this.changeHtmlToXlsx = this.changeHtmlToXlsx.bind(this)\n  }\n\n  componentDidMount () {\n    this.applyDefaultsToEntity(this.props)\n    this.removeInvalidXlsxTemplateReferences()\n  }\n\n  componentWillReceiveProps (nextProps) {\n    // when component changes because another template is created\n    if (this.props.entity._id !== nextProps.entity._id) {\n      this.applyDefaultsToEntity(nextProps)\n    }\n  }\n\n  componentDidUpdate () {\n    this.removeInvalidXlsxTemplateReferences()\n  }\n\n  removeInvalidXlsxTemplateReferences () {\n    const { entity, entities, onChange } = this.props\n\n    if (!entity.baseXlsxTemplate) {\n      return\n    }\n\n    const updatedXlsxTemplates = Object.keys(entities).filter((k) => entities[k].__entitySet === 'xlsxTemplates' && entities[k].shortid === entity.baseXlsxTemplate.shortid)\n\n    if (updatedXlsxTemplates.length === 0) {\n      onChange({ _id: entity._id, baseXlsxTemplate: null })\n    }\n  }\n\n  applyDefaultsToEntity (props) {\n    const { entity } = props\n    const htmlEngines = Studio.extensions['html-to-xlsx'].options.htmlEngines\n    let entityNeedsDefault = false\n\n    if (\n      entity.__isNew ||\n      (entity.htmlToXlsx == null || entity.htmlToXlsx.htmlEngine == null)\n    ) {\n      entityNeedsDefault = true\n    }\n\n    if (htmlEngines != null && htmlEngines[0] != null && entityNeedsDefault) {\n      this.changeHtmlToXlsx(props, {\n        htmlEngine: htmlEngines[0]\n      })\n    }\n  }\n\n  changeHtmlToXlsx (props, change) {\n    const { entity, onChange } = props\n    const htmlToXlsx = entity.htmlToXlsx || {}\n\n    onChange({\n      ...entity,\n      htmlToXlsx: { ...htmlToXlsx, ...change }\n    })\n  }\n\n  render () {\n    const { entity, onChange } = this.props\n    const htmlToXlsx = entity.htmlToXlsx || {}\n    const htmlEngines = Studio.extensions['html-to-xlsx'].options.htmlEngines\n\n    return (\n      <div className='properties-section'>\n        <div className='form-group'>\n          <label>html engine</label>\n          <select\n            value={htmlToXlsx.htmlEngine}\n            onChange={(v) => this.changeHtmlToXlsx(this.props, { htmlEngine: v.target.value })}\n          >\n            {htmlEngines.map((engine) => (\n              <option key={engine} value={engine}>{engine}</option>\n            ))}\n          </select>\n        </div>\n        <div className='form-group'>\n          <label>insert table output to xlsx template</label>\n          <input\n            type='checkbox' checked={htmlToXlsx.insertToXlsxTemplate === true}\n            onChange={(v) => this.changeHtmlToXlsx(this.props, { insertToXlsxTemplate: v.target.checked })} />\n        </div>\n        {htmlToXlsx.insertToXlsxTemplate === true && (\n          <div className='form-group'>\n            <label>xlsx template</label>\n            <EntityRefSelect\n              headingLabel='Select xlsx template'\n              filter={(references) => ({ xlsxTemplates: references.xlsxTemplates })}\n              value={entity.baseXlsxTemplate ? entity.baseXlsxTemplate.shortid : null}\n              onChange={(selected) => onChange({ _id: entity._id, baseXlsxTemplate: selected != null && selected.length > 0 ? { shortid: selected[0].shortid } : null })}\n            />\n          </div>\n        )}\n        <div className='form-group'>\n          <label title='window.JSREPORT_READY_TO_START=true;'>wait for conversion trigger</label>\n          <input\n            type='checkbox' title='window.JSREPORT_READY_TO_START=true;' checked={htmlToXlsx.waitForJS === true}\n            onChange={(v) => this.changeHtmlToXlsx(this.props, { waitForJS: v.target.checked })} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Properties\n","module.exports = Studio.libraries['react'];"],"sourceRoot":""}